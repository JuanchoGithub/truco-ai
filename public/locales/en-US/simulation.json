
{
  "simulation": {
    "title": "Simulation Mode",
    "tab_auto_hand": "Auto Sim",
    "tab_manual_hand": "Manual Sim",
    "tab_scenario_test": "Scenario Test",
    "tab_batch_analysis": "Hand Analysis",
    "tab_runner": "Scenario Runner",
    "tab_gemini": "AI vs Gemini",
    "button_simulating": "Simulating...",
    "button_restart": "Restart",
    "button_simulate_round": "Simulate Round",
    "button_copy": "Copy Text",
    "button_copied": "Copied!",
    "button_copy_error": "Error",
    "button_exit": "Back to Menu",
    "scoreboard_title": "Scoreboard",
    "round_status_title": "Round {{round}} Status",
    "phase": "Phase",
    "turn": "Turn",
    "mano": "Hand",
    "initial_hand_ai": "AI Initial Hand",
    "initial_hand_randomizer": "Randomizer Initial Hand",
    "log_start_message": "Click \"Simulate Round\" to begin.",
    "log_new_simulation": "--- START OF SIMULATION ---",
    "log_round_start": "--- ROUND {{round}} ---",
    "log_ai_hand": "AI Hand: {{hand}}",
    "log_randomizer_hand": "Randomizer Hand: {{hand}}",
    "log_mano": "Hand (starts): {{player}}",
    "log_resolving": "Resolving {{phase}}",
    "log_game_winner_ai": "--- AI WINS THE GAME ---",
    "log_game_winner_randomizer": "--- RANDOMIZER WINS THE GAME ---",
    "log_round_end": "--- END OF ROUND {{round}} ---",
    "log_round_end_winner": "Winner: {{winner}}",
    "log_round_end_score": "Score: AI {{aiScore}} - Randomizer {{playerScore}}",
    "log_ai_logic": "[AI Logic]:\n{{reasoning}}",
    "log_randomizer_logic": "[Randomizer Logic]:\n{{reasoning}}",
    "manual": {
        "setup_title": "Manual Round Setup",
        "scores_mano": "Scores & Hand",
        "ai_score": "AI Score",
        "opponent_score": "Opponent Score",
        "mano": "Hand (starts)",
        "ai_hand": "AI's Hand",
        "opponent_hand": "Opponent's Hand",
        "start_round": "Start Round",
        "valid_actions_for": "Valid Actions for",
        "ai_suggestion": "AI Suggestion",
        "ask_ai": "Ask AI",
        "ask_ai_prompt": "Press 'Ask AI' to see its recommended move.",
        "reset": "Reset Setup",
        "view_log": "View Log",
        "log_title": "Manual Round Log",
        "ai_tricks": "AI's Tricks",
        "opponent_tricks": "Opponent's Tricks",
        "log_round_start": "MANUAL ROUND START",
        "log_initial_setup": "Initial Setup",
        "log_ai_suggestion_title": "AI Suggestion",
        "log_action": "Action",
        "log_event": "Event"
    },
    "gemini": {
        "title": "AI vs Gemini",
        "description": "Watch the local AI play against an opponent powered by Google Gemini. After each round or match, Gemini will analyze the local AI's performance and provide coaching feedback.",
        "start_round_sim": "Start Round Sim",
        "start_match_sim": "Start Match Sim",
        "stop_sim": "Stop",
        "gemini_hand": "Gemini's Hand",
        "local_ai_hand": "Local AI's Hand",
        "game_log": "Game Log",
        "gemini_thoughts": "Gemini's Thoughts",
        "gemini_analysis": "Gemini's Analysis",
        "get_analysis": "Get Analysis",
        "analyzing": "Analyzing...",
        "analysis_prompt": "Click 'Get Analysis' to have Gemini review the local AI's performance.",
        "waiting_for_gemini": "Waiting for Gemini's move...",
        "error_gemini_move": "Error getting Gemini's move. Skipping turn.",
        "error_gemini_analysis": "Error getting Gemini's analysis.",
        "log_game_winner_gemini": "--- GEMINI WINS THE GAME ---",
        "error_quota_retry": "API quota exceeded. Automatically retrying in 30 seconds...",
        "error_quota_manual": "Automatic retry failed. Please retry manually.",
        "retry_button": "Retry Move"
    }
  },
  "simulation_actions": {
    "play_card": "{{playerName}} plays {{cardName}}.",
    "play_card_no_hand_data": "{{playerName}} plays a card (hand data unavailable)",
    "call_envido": "{{playerName}} calls ENVIDO.",
    "call_real_envido": "{{playerName}} calls REAL ENVIDO.",
    "call_falta_envido": "{{playerName}} calls FALTA ENVIDO.",
    "declare_flor": "{{playerName}} calls FLOR.",
    "call_truco": "{{playerName}} calls TRUCO.",
    "call_retruco": "{{playerName}} calls RETRUCO.",
    "call_vale_cuatro": "{{playerName}} calls VALE CUATRO.",
    "accept": "{{playerName}} accepts.",
    "decline": "{{playerName}} refuses.",
    "call_contraflor": "{{playerName}} calls CONTRAFLOR.",
    "accept_contraflor": "{{playerName}} accepts with FLOR.",
    "decline_contraflor": "{{playerName}} folds with FLOR.",
    "default": "{{playerName}} performs action {{actionType}}"
  },
  "card_picker": {
    "title": "Select a Card"
  }
}
